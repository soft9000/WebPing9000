/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * guiWebPinger.java
 *
 * Created on May 29, 2011, 9:02:21 AM
 */
package com.soft9000.webping;

import com.soft9000.logger.StatusLog;
import java.io.File;
import java.net.URL;
import javax.swing.JOptionPane;

/**
 *
 * @author profnagy
 */
public class guiWebPinger extends javax.swing.JFrame {

    StatusLog log = new StatusLog();
    WebPingRobot robot = null;
    dlgPingHistogram dlg_sample = null;
    dlgPingMeans dlg_means = null;
    File fileProject = new File("project").getAbsoluteFile();
    Project prop = new Project();
    private final String S_PROP_URL = "WebPingUrl";

    /** Creates new form guiWebPinger */
    public guiWebPinger() {
        initComponents();
        log.empty();
        this.setSize(450, 480);
        com.soft9000.gui.Misc.ScreenCenter(this);
        if (fileProject.exists()) {
            prop = (Project) com.soft9000.file.ObjectLoadSave.Load(fileProject);
            if (prop == null) {
                fileProject.delete();
            } else {
                this.jtfWebPage.setText(prop.sURL);
            }
        }
    }

    public synchronized void setLogMessage(String string) {
        if (dlg_sample != null) {
            dlg_sample.setLogMessage(string);
        }
    }

    public synchronized void setPingResult(WebPingHistoryData data) {
        if (dlg_sample != null) {
            dlg_sample.setPingResults(data);
        }
        if (dlg_means != null) {
            dlg_means.setPingResults(data);
        }
    }

    public synchronized WebPingTaksInfo getServerInfo() {
        WebPingTaksInfo info = new WebPingTaksInfo();
        try {
            info.url = new URL(this.jtfWebPage.getText());
            info.seconds = getTimeInterval();
        } catch (Exception ex) {
        }
        return info;
    }

    private int getTimeInterval() {
        String str = (String) this.jcbInterval.getSelectedItem();
        int iPos = str.indexOf(' ');
        if (iPos != -1) {
            str = str.substring(0, iPos).trim();
            return Integer.parseInt(str);
        }
        return 0;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel6 = new javax.swing.JPanel();
        jtpToggleRobot = new javax.swing.JToggleButton();
        jcbInterval = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jtfWebPage = new javax.swing.JTextField();
        jbTestUrl = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmiShowResults = new javax.swing.JMenuItem();
        jmiShowHistory = new javax.swing.JMenuItem();
        jmiStopBot = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WebPing");
        setFont(new java.awt.Font("Trebuchet MS", 0, 24));
        getContentPane().setLayout(new java.awt.CardLayout());

        jPanel1.setLayout(new java.awt.CardLayout());

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setLayout(new java.awt.CardLayout());

        jSplitPane1.setDividerLocation(155);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(" Client: Ping Robot "));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtpToggleRobot.setText("Start Page Pinger ");
        jtpToggleRobot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtpToggleRobotActionPerformed(evt);
            }
        });
        jPanel6.add(jtpToggleRobot, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, -1, -1));

        jcbInterval.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5 Sec", "7 Sec", "10 Sec", "15 Sec", "20 Sec", "30 Sec", "60 Sec" }));
        jcbInterval.setSelectedIndex(3);
        jPanel6.add(jcbInterval, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 150, -1));

        jLabel2.setText("Page Ping Interval:");
        jPanel6.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, -1, -1));

        jLabel3.setText("Robot:");
        jPanel6.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, -1, -1));

        jSplitPane1.setRightComponent(jPanel6);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(" Server: Ping Page "));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtfWebPage.setText("http://YourSite/webping.php");
        jPanel4.add(jtfWebPage, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 40, 370, -1));

        jbTestUrl.setText("Test");
        jbTestUrl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTestUrlActionPerformed(evt);
            }
        });
        jPanel4.add(jbTestUrl, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 89, -1));

        jSplitPane1.setLeftComponent(jPanel4);

        jPanel5.add(jSplitPane1, "card2");

        jPanel1.add(jPanel5, "card2");

        jTabbedPane1.addTab("WebPing ", jPanel1);

        jPanel3.setBackground(java.awt.Color.blue);
        jPanel3.setForeground(java.awt.Color.orange);
        jPanel3.setFont(jPanel3.getFont().deriveFont(jPanel3.getFont().getSize()+6f));
        jPanel3.setLayout(new java.awt.CardLayout());

        jTextPane1.setBackground(java.awt.Color.lightGray);
        jTextPane1.setContentType("text/html");
        jTextPane1.setEditable(false);
        jTextPane1.setFont(new java.awt.Font("Trebuchet MS", 0, 24)); // NOI18N
        jTextPane1.setForeground(java.awt.Color.orange);
        jTextPane1.setText("<html>\n  <head>\n\n  </head>\n  <body>\n<table color='orange'>\n<tr><td>\n    <p style=\"margin-top: 12\">\nHow to use WebPing:\n      <ol>\n<li>Locate &amp; upload webping.php &amp; style.css to your server.</li>\n<li>Once uploaded, provide & test your site's <i>webping.php</i> page in the <b>WebPing</b> Tab. (Ignore errors if testing on <i>localhost (127.0.0.1)</i>)</li>\n<li>Select the ping interval.</li>\n<li>Start the Robot.</li>\n<li>Samples can be downloaded, reset &amp; monitored from your sites <i>webping.php</i> page.</li>\n     </ol>\n<br>\nEnjoy!\n<br><br>\n-Rn</font>\n    </p>\n</td></tr>\n</table>\n  </body>\n</html>\n");
        jScrollPane1.setViewportView(jTextPane1);

        jPanel3.add(jScrollPane1, "card2");

        jTabbedPane1.addTab("Help", jPanel3);

        getContentPane().add(jTabbedPane1, "card2");

        jMenu1.setText("Robot");

        jmiShowResults.setText("Stats");
        jmiShowResults.setEnabled(false);
        jmiShowResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiShowResultsActionPerformed(evt);
            }
        });
        jMenu1.add(jmiShowResults);

        jmiShowHistory.setText("History");
        jmiShowHistory.setEnabled(false);
        jmiShowHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiShowHistoryActionPerformed(evt);
            }
        });
        jMenu1.add(jmiShowHistory);

        jmiStopBot.setText("Stop Ping");
        jmiStopBot.setEnabled(false);
        jmiStopBot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiStopBotActionPerformed(evt);
            }
        });
        jMenu1.add(jmiStopBot);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtpToggleRobotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtpToggleRobotActionPerformed

        if (dlg_sample == null) {
            dlg_sample = new dlgPingHistogram(this, false);
            com.soft9000.gui.Misc.ScreenCenter(dlg_sample);
        }
        if (dlg_means == null) {
            dlg_means = new dlgPingMeans(this, false);
            com.soft9000.gui.Misc.ScreenCenter(dlg_means);
        }
        if (robot != null) {
            robot.stop();
            robot = null;
            dlg_sample.setVisible(false);
            dlg_means.setVisible(false);
            setRunningVisuals(false);
            return;
        } else {
            long lSeconds = getTimeInterval();
            if (lSeconds == 0) {
                JOptionPane.showMessageDialog(rootPane, "Error: Interval is zero.");
                return;
            }
            robot = new WebPingRobot();
            if (robot.start(this, lSeconds, 50) == false) {
                JOptionPane.showMessageDialog(rootPane, "Error: Unable to start ping robot.");
                return;
            }
            WebPingTaksInfo info = this.getServerInfo();
            prop.sURL = info.url.toExternalForm();
            if (com.soft9000.file.ObjectLoadSave.Save(fileProject, prop) == false) {
                JOptionPane.showMessageDialog(rootPane, "Warning: Unable to save default GUI porperties.");
            }
            dlg_means.setVisible(true);
            dlg_sample.setVisible(true);
            setRunningVisuals(true);
            return;
        }

    }//GEN-LAST:event_jtpToggleRobotActionPerformed
    private void setRunningVisuals(boolean bRunning) {
        this.jmiShowHistory.setEnabled(bRunning);
        this.jmiShowResults.setEnabled(bRunning);
        this.jmiStopBot.setEnabled(bRunning);
        this.jtfWebPage.setEditable(!bRunning);
        this.jcbInterval.setEnabled(!bRunning);
        if (bRunning == true) {
            this.jtpToggleRobot.setText("Stop Robot");
        } else {
            this.jtpToggleRobot.setText("Start Robot");
        }
    }

    private void jbTestUrlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTestUrlActionPerformed
        WebPingTaksInfo info = getServerInfo();
        if (info.isNull()) {
            JOptionPane.showMessageDialog(rootPane, "Error: Invalid URL. Please use a valid URL name.");
            return;
        }
        boolean br = WebPingServerOps.IsServerScripted(info);
        if (br == false) {
            JOptionPane.showMessageDialog(rootPane, "Error: Please upload and/or enable the WebPing PHP Endpoint.");
            return;
        }
        JOptionPane.showMessageDialog(rootPane, "Success: WebPing PHP Endpoint found. Be sure to allow writing to folder.");
        prop.sURL = info.url.toExternalForm();
        if (com.soft9000.file.ObjectLoadSave.Save(fileProject, prop) == false) {
            JOptionPane.showMessageDialog(rootPane, "Warning: Unable to save default GUI porperties.");
        }
    }//GEN-LAST:event_jbTestUrlActionPerformed

    private void jmiShowResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiShowResultsActionPerformed
        if (dlg_sample != null) {
            com.soft9000.gui.Misc.ScreenCenter(dlg_sample);
            dlg_sample.setEnabled(true);
            dlg_sample.setVisible(true);
        }
    }//GEN-LAST:event_jmiShowResultsActionPerformed

    private void jmiShowHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiShowHistoryActionPerformed
        if (dlg_means != null) {
            com.soft9000.gui.Misc.ScreenCenter(dlg_means);
            dlg_means.setVisible(true);
        }
    }//GEN-LAST:event_jmiShowHistoryActionPerformed

    private void jmiStopBotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiStopBotActionPerformed
        jtpToggleRobotActionPerformed(evt);
    }//GEN-LAST:event_jmiStopBotActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new guiWebPinger().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JButton jbTestUrl;
    private javax.swing.JComboBox jcbInterval;
    private javax.swing.JMenuItem jmiShowHistory;
    private javax.swing.JMenuItem jmiShowResults;
    private javax.swing.JMenuItem jmiStopBot;
    private javax.swing.JTextField jtfWebPage;
    private javax.swing.JToggleButton jtpToggleRobot;
    // End of variables declaration//GEN-END:variables
}
