/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * dlgPingHistogram.java
 *
 * Created on May 31, 2011, 12:50:26 PM
 */
package com.soft9000.webping;

import com.soft9000.dates.DateInfo;
import com.soft9000.graphics.BarChart;
import com.soft9000.logger.StatusLog;
import javax.swing.DefaultListModel;

/**
 *
 * @author profnagy
 */
public class dlgPingHistogram extends java.awt.Dialog {

    private DefaultListModel lm = null;

    public void setPingResults(WebPingHistoryData data) {
        BarChart.PaintActiveBars(jPanel3, data.points);
    }

    /** Creates new form dlgPingHistogram */
    public dlgPingHistogram(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setSize(400, 480);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateX1 = new com.soft9000.dates.DateX();
        jPanel1 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlstBox = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();

        setTitle(" WebPing Status ");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        setLayout(new java.awt.CardLayout());

        jPanel1.setLayout(new java.awt.CardLayout());

        jSplitPane1.setDividerLocation(150);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(" Messages "));
        jPanel2.setLayout(new java.awt.CardLayout());

        jScrollPane1.setViewportView(jlstBox);

        jPanel2.add(jScrollPane1, "card2");

        jSplitPane1.setLeftComponent(jPanel2);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(" Samples  "));
        jSplitPane1.setRightComponent(jPanel3);

        jPanel1.add(jSplitPane1, "card2");

        add(jPanel1, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                dlgPingHistogram dialog = new dlgPingHistogram(new java.awt.Frame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.soft9000.dates.DateX dateX1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JList jlstBox;
    // End of variables declaration//GEN-END:variables

    public void setLogMessage(String string) {
        DateInfo info = com.soft9000.dates.DateInfo.GetToday();
        String sLog = StatusLog.ToString(info, string);

        if (lm == null) {
            lm = new DefaultListModel();
            this.jlstBox.setModel(lm);
        }
        lm.add(0, sLog);
        while (lm.getSize() > 100) {
            lm.remove(100);
        }
    }
}
