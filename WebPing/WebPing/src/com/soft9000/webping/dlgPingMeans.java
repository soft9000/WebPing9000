/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * dlgPingMeans.java
 *
 * Created on May 31, 2011, 2:00:37 PM
 */
package com.soft9000.webping;

import com.soft9000.graphics.BarChart.DataPoint;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author profnagy
 */
public class dlgPingMeans extends java.awt.Dialog {

    DefaultTableModel model = null;
    public PingSummarySet means = new PingSummarySet();

    /** Creates new form dlgPingMeans */
    public dlgPingMeans(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jpHistogram = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtSet = new javax.swing.JTable();

        setTitle(" Ping Set History ");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                doFocusGained(evt);
            }
        });

        jPanel1.setLayout(new java.awt.CardLayout());

        jSplitPane1.setDividerLocation(273);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jpHistogram.setBorder(javax.swing.BorderFactory.createTitledBorder(" Mean of Means"));
        jpHistogram.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                doChartClicked(evt);
            }
        });
        jpHistogram.setLayout(new java.awt.CardLayout());
        jSplitPane1.setLeftComponent(jpHistogram);

        jPanel3.setLayout(new java.awt.CardLayout());

        jtSet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "History (FIFO)", "Low", "High", "Average"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtSet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtSetMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtSet);

        jPanel3.add(jScrollPane1, "card2");

        jSplitPane1.setRightComponent(jPanel3);

        jPanel1.add(jSplitPane1, "card2");

        add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void doFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_doFocusGained
        doChart();
    }//GEN-LAST:event_doFocusGained

    private void jtSetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtSetMouseClicked
        doChart();
    }//GEN-LAST:event_jtSetMouseClicked

    private void doChartClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doChartClicked
        doChart();
    }//GEN-LAST:event_doChartClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                dlgPingMeans dialog = new dlgPingMeans(new java.awt.Frame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel jpHistogram;
    private javax.swing.JTable jtSet;
    // End of variables declaration//GEN-END:variables

    public void setPingResults(WebPingHistoryData data) {
        if (means.setHistorical(data) == true) {
            doChart();
            setTitle("Mean of Means");
        } else {
            int iCount = means.getCountup();
            String str = "Next Set in " + (data.points.length - iCount) + " Samples";
            setTitle(str);
        }
    }

    private void doChart() {
        if (means == null || means.isNull()) {
            return;
        }
        model = new DefaultTableModel();
        TableModel mod = jtSet.getModel();
        int nelem = mod.getColumnCount();
        model.addColumn("Set #");
        model.addColumn("Low");
        model.addColumn("High");
        model.addColumn("Average");
        jtSet.setModel(model);

        DataPoint[] points = new DataPoint[means.list.size()];
        for (int ss = 0; ss < points.length; ss++) {
            PingSummary ttt = means.list.get(ss);
            points[ss] = new DataPoint(ttt.dAverage);
            Object[] row = new Object[4];
            row[0] = new Integer(ss + 1);
            row[1] = new Double(ttt.dLow);
            row[2] = new Double(ttt.dHigh);
            row[3] = new Double(ttt.dAverage);
            model.addRow(row);
        }
        com.soft9000.graphics.BarChart.PaintActiveBars(jpHistogram, points);
    }
}
